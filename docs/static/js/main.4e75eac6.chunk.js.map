{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","pages/LoginPage.js","pages/SelecaoPage.js","adapters/api-planilha.js","pages/ListaVacinadosPage.js","pages/VacinarPage.js","routes.js","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","LoginPage","classes","history","useHistory","AppBar","position","Toolbar","Typography","variant","className","title","Container","CssBaseline","noValidate","onSubmit","e","preventDefault","user","target","elements","value","password","console","log","push","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","color","stepper","bottom","buttons","right","formControl","minWidth","buttonConfirmar","left","SelecaoPage","React","useState","activeStep","setActiveStep","steps","grupo","setGrupo","vacina","setVacina","lote","setLote","grupos","vacinas","lotes","stepSelects","handleChangeGrupo","event","handleChangeVacina","handleChangeLote","length","centerDiv","onClick","style","textAlign","step","FormControl","InputLabel","Select","labelId","onChange","map","grupoItem","MenuItem","vacinaItem","loteItem","getStepContent","disabled","prevStep","Stepper","index","Step","StepLabel","card","buttonDiv","buttonAdd","ListaVacinadosPage","props","state","vacinados","nome","cpf","Card","CardContent","Divider","List","dense","vacinado","ListItem","button","divider","ListItemText","primary","secondary","divCpf","tfCpf","pacienteDiv","paddingLeft","VacinarPage","visibility","setVisibility","startIcon","Routes","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4e75eac6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    function doLogin(e) {\r\n        e.preventDefault();\r\n        const user = e.target.elements.user.value;\r\n        const password = e.target.elements.password.value;\r\n        console.log(user + password);\r\n        history.push('/selecao');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Vacinas\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container>\r\n                <CssBaseline />\r\n\r\n                <form className={classes.form} noValidate onSubmit={doLogin}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"Usuário\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Entrar\r\n          </Button>\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getGrupos, getVacinas, getLotes } from '../adapters/api-planilha';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepper: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    width: '100%'\r\n  },\r\n  buttons: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    right: 20\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  buttonConfirmar: {\r\n    position: 'fixed',\r\n    bottom: 100,\r\n    left: '50%',\r\n    width: 120,\r\n    'margin-left': '-60px'\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction SelecaoPage() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = ['Selecione o grupo', 'Selecione a vacina', 'Selecione o lote'];\r\n  const [grupo, setGrupo] = React.useState('');\r\n  const [vacina, setVacina] = React.useState('');\r\n  const [lote, setLote] = React.useState('');\r\n  const grupos = getGrupos();\r\n  const vacinas = getVacinas();\r\n  const lotes = getLotes();\r\n  const stepSelects = [grupo, vacina, lote];\r\n  const history = useHistory();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep)=>prevStep+1);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevStep)=>prevStep+-1);\r\n  }\r\n\r\n  const handleChangeGrupo = (event) => {\r\n    setGrupo(event.target.value);\r\n  };\r\n\r\n  const handleChangeVacina = (event) => {\r\n    setVacina(event.target.value);\r\n  };\r\n\r\n  const handleChangeLote = (event) => {\r\n    setLote(event.target.value);\r\n  };\r\n\r\n  const handleConfirmation = (event) => {\r\n    history.push('/listavacinados', {grupo: grupo, vacina: vacina, lote: lote});\r\n\r\n  }\r\n\r\n\r\n  function getStepContent(step) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"grupo-select-label\">Grupo</InputLabel>\r\n              <Select\r\n                labelId=\"grupo-select-label\"\r\n                id=\"grupo-select\"\r\n                value={grupo}\r\n                onChange={handleChangeGrupo}\r\n              >\r\n                {grupos.map((grupoItem)=>{\r\n                  return <MenuItem key={grupoItem} value={grupoItem}>{grupoItem}</MenuItem>\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n        );\r\n      case 1:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"vacina-select-label\">Vacina</InputLabel>\r\n          <Select\r\n            labelId=\"vacina-select-label\"\r\n            id=\"vacina-select\"\r\n            value={vacina}\r\n            onChange={handleChangeVacina}\r\n          >\r\n            {vacinas.map((vacinaItem)=>{\r\n              return <MenuItem key={vacinaItem} value={vacinaItem}>{vacinaItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      case 2:\r\n        return (\r\n          <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"lote-select-label\">Lote</InputLabel>\r\n          <Select\r\n            labelId=\"lote-select-label\"\r\n            id=\"lote-select\"\r\n            value={lote}\r\n            onChange={handleChangeLote}\r\n          >\r\n            {lotes.map((loteItem)=>{\r\n              return <MenuItem key={loteItem} value={loteItem}>{loteItem}</MenuItem>\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n        );\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <CssBaseline />\r\n          <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Vacinas\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n        {activeStep === steps.length ? (\r\n          <Container>\r\n            <p>Grupo: {grupo}</p>\r\n            <p>Vacina: {vacina}</p>\r\n            <p>Lote: {lote}</p>\r\n            <div className={classes.centerDiv}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.buttonConfirmar}\r\n                onClick={handleConfirmation}\r\n              >Confirmar</Button>\r\n            </div>\r\n          </Container>\r\n        ) : (\r\n          <div>\r\n            <div style={{textAlign: \"center\"}}>{getStepContent(activeStep)}</div>\r\n            <div className={classes.buttons}>\r\n              <Button disabled={activeStep === 0} onClick={handleBack}>\r\n                Voltar\r\n              </Button>\r\n              <Button\r\n                disabled={stepSelects[activeStep]===''}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n              >\r\n                Próximo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      \r\n      <div className={classes.stepper}>\r\n        <Stepper activeStep={activeStep}>\r\n          {steps.map((label, index) => {\r\n            const stepProps = {};\r\n            return (\r\n              <Step key={label} {...stepProps}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelecaoPage;","\r\nexport const getGrupos = () => {\r\n    return ['Trabalhadores de Saúde', 'Pessoas de 80 anos ou mais']\r\n}\r\n\r\nexport const getVacinas = () => {\r\n    return ['Coronavac', 'Pfizer', 'Oxford']\r\n}\r\n\r\nexport const getLotes = () => {\r\n    return ['45604654', '70546Z5646', '4654546']\r\n}\r\n\r\nexport const getVacinados = () => {\r\n    return [\r\n        {nome: 'João da Silva', cpf: '12312512412'},\r\n        {nome: 'Pedro dos Santos', cpf:'64525625655'},\r\n        {nome: 'Maria da Silva', cpf: '21412421487'}\r\n    ]\r\n}","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, Card, CardContent, Container, Divider, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { getVacinados } from '../adapters/api-planilha';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: '20px'\r\n    },\r\n    buttonDiv: {\r\n        position: 'fixed',\r\n        bottom: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    buttonAdd: {\r\n        width: '100px'\r\n    }\r\n}));\r\n\r\nfunction ListaVacinadosPage(props) {\r\n    const classes = useStyles();\r\n    const grupo = props.location.state.grupo;\r\n    const vacina = props.location.state.vacina;\r\n    const lote = props.location.state.lote;\r\n    const vacinados = getVacinados();\r\n    const history = useHistory();\r\n\r\n    const handleAdd = () => {\r\n        history.push('/vacinar')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                        Vacinas\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Card className={classes.card}>\r\n                    <CardContent>\r\n                        <p>Grupo: {grupo}</p>\r\n                        <p>Vacina: {vacina}</p>\r\n                        <p>Lote: {lote}</p>\r\n                    </CardContent>\r\n                </Card>\r\n                <Divider variant=\"middle\" />\r\n                <Typography variant=\"h6\">Registros de vacinaçao</Typography>\r\n                <List dense>\r\n                    {vacinados.map((vacinado) => {\r\n                        return (\r\n                            <ListItem key={vacinado.cpf} button divider>\r\n                                <ListItemText\r\n                                    primary={vacinado.nome}\r\n                                    secondary={vacinado.cpf}\r\n                                />\r\n                            </ListItem>\r\n                        )\r\n                    })}\r\n                    \r\n                </List>\r\n                <div className={classes.buttonDiv}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.buttonAdd}\r\n                        onClick={handleAdd}\r\n                        >Adicionar\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListaVacinadosPage;","import AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { Button, Card, CardContent, Container, Divider, List, ListItem, ListItemText, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { getVacinados } from '../adapters/api-planilha';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    divCpf: {\r\n        width: '100%',\r\n        textAlign: 'center'\r\n    },\r\n    tfCpf: {\r\n        width: '90%'\r\n    },\r\n    button: {\r\n        marginTop: '20px'\r\n    },\r\n    pacienteDiv: {\r\n        paddingLeft: '20px'\r\n    }\r\n}));\r\n\r\nfunction VacinarPage(props) {\r\n    const classes = useStyles();\r\n    const [visibility, setVisibility] = React.useState(false);\r\n\r\n    const handleSearch = () => {\r\n        setVisibility(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\">\r\n                        Vacinas\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.divCpf}>\r\n                    <Typography variant=\"h6\">Buscar paciente</Typography>\r\n                    <TextField className={classes.tfCpf} id=\"cpf\" label=\"CPF\"  />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        startIcon={<SearchIcon />}\r\n                        onClick={handleSearch}\r\n                    >\r\n                        Buscar\r\n                    </Button>\r\n                </div>\r\n                {visibility ? <div className={classes.pacienteDiv}>\r\n                        <p>João da Silva</p>\r\n                        <p>Data de nascimento: 01/01/1980</p>\r\n                        <p>Sexo Masculino</p>\r\n                    </div> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VacinarPage;","import {Switch, Route} from \"react-router-dom\";\r\nimport LoginPage from './pages/LoginPage'\r\nimport SelecaoPage from './pages/SelecaoPage'\r\nimport ListaVacinadosPage from './pages/ListaVacinadosPage'\r\nimport VacinarPage from \"./pages/VacinarPage\";\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path={'/vacinas/'} component={LoginPage} exact />\r\n            <Route path={'/vacinas/selecao'} component={SelecaoPage} />\r\n            <Route path={'vacinas/listavacinados'} component={ListaVacinadosPage} />\r\n            <Route path={'vacinas/vacinar'} component={VacinarPage} />\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Routes} from './routes'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}